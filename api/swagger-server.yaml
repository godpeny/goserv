openapi: 3.0.0
info:
  description: >-
    server template in GO.
  version: 1.0.0
  title: Goserver in Open API
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: user
    description: Everything about Users
paths:
  /ping:
    get:
      tags:
        - ping
      summary: server health check
      description: 'server health check'
      operationId: healthCheck
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '405':
          description: Invalid input
  /api/v1/user:
    post:
      tags:
        - user
      summary: create user
      description: 'create user'
      operationId: createUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/V1_User'
        description: Create user object
        required: true
    get:
      tags:
        - user
      summary: list users
      description: 'list all users'
      operationId: listUser
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '405':
          description: Invalid input
  /api/v1/user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      description: 'Get user by user name'
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: The name that needs to be fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '405':
          description: Invalid input
    put:
      tags:
        - user
      summary: Updated user
      description: 'Updated user'
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: 'The name that need to be updated'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '405':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/V1_User'
        description: Updated user object
        required: true
    delete:
      tags:
        - user
      summary: Delete user
      description: 'Delete user'
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '405':
          description: Invalid input
components:
  requestBodies:
    V1_User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/V1_User'
      description: User object
      required: true
  schemas:
    V1_User:
      title: a User
      description: A User Schema
      type: object
      required:
        - name
        - age
      properties:
        age:
          type: integer
          format: int64
        name:
          type: string
    ApiResponse:
      title: An API response
      description: A Common Successful API response
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

  
